variables:
  GITHUB_USER: rainu
  GITHUB_REPO: backup2glacier
  RELEASE_TAG: v0.0.1

stages:
  - build
  - predeploy
  - deploy

build-linux-368:
  image: golang:1.10
  stage: build
  script:
    - export GOPATH=$(pwd)/build
    - mkdir -p build/src/
    - cd build/src/
    - ln -s ${CI_PROJECT_DIR} ./backup2glacier
    - cd backup2glacier
    - CGO_ENABLED=0
    - GOOS=linux
    - GOARCH=386
    - go get ./...
    - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-linux-amd64:
  image: golang:1.10
  stage: build
  script:
    - export GOPATH=$(pwd)/build
    - mkdir -p build/src/
    - cd build/src/
    - ln -s ${CI_PROJECT_DIR} ./backup2glacier
    - cd backup2glacier
    - CGO_ENABLED=0
    - GOOS=linux
    - GOARCH=amd64
    - go get ./...
    - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-linux-arm:
  image: golang:1.10
  stage: build
  script:
    - export GOPATH=$(pwd)/build
    - mkdir -p build/src/
    - cd build/src/
    - ln -s ${CI_PROJECT_DIR} ./backup2glacier
    - cd backup2glacier
    - CGO_ENABLED=0
    - GOOS=linux
    - GOARCH=arm
    - go get ./...
    - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-linux-arm64:
  image: golang:1.10
  stage: build
  script:
    - export GOPATH=$(pwd)/build
    - mkdir -p build/src/
    - cd build/src/
    - ln -s ${CI_PROJECT_DIR} ./backup2glacier
    - cd backup2glacier
    - CGO_ENABLED=0
    - GOOS=linux
    - GOARCH=arm64
    - go get ./...
    - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-windows-368:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=windows
  - GOARCH=386
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-windows-amd64:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=windows
  - GOARCH=amd64
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

prepare-deploy-github:
  image: golang:1.10
  stage: predeploy
  script:
    - go get github.com/aktau/github-release
    - github-release release --tag ${RELEASE_TAG} --description "automatic built builds"

deploy-github-linux-368:
  image: golang:1.10
  stage: deploy
  script:
    - go get github.com/aktau/github-release
    - github-release upload --tag ${RELEASE_TAG} -n backup2glacier-linux-368 -f ${CI_PROJECT_DIR}/backup2glacier-linux-368
  dependencies:
    - build-linux-368

deploy-github-linux-amd64:
  image: golang:1.10
  stage: deploy
  script:
    - go get github.com/aktau/github-release
    - github-release upload --tag ${RELEASE_TAG} -n backup2glacier-linux-amd64 -f ${CI_PROJECT_DIR}/backup2glacier-linux-amd64
  dependencies:
    - build-linux-amd64

deploy-github-linux-arm:
  image: golang:1.10
  stage: deploy
  script:
    - go get github.com/aktau/github-release
    - github-release upload --tag ${RELEASE_TAG} -n backup2glacier-linux-arm -f ${CI_PROJECT_DIR}/backup2glacier-linux-arm
  dependencies:
    - build-linux-arm

deploy-github-linux-arm64:
  image: golang:1.10
  stage: deploy
  script:
    - go get github.com/aktau/github-release
    - github-release upload --tag ${RELEASE_TAG} -n backup2glacier-linux-arm64 -f ${CI_PROJECT_DIR}/backup2glacier-linux-arm64
  dependencies:
    - build-linux-arm64

deploy-github-windows-368:
  image: golang:1.10
  stage: deploy
  script:
    - go get github.com/aktau/github-release
    - github-release upload --tag ${RELEASE_TAG} -n backup2glacier-windows-368 -f ${CI_PROJECT_DIR}/backup2glacier-windows-368
  dependencies:
    - build-windows-368

deploy-github-windows-amd64:
  image: golang:1.10
  stage: deploy
  script:
    - go get github.com/aktau/github-release
    - github-release upload --tag ${RELEASE_TAG} -n backup2glacier-windows-amd64 -f ${CI_PROJECT_DIR}/backup2glacier-windows-amd64
  dependencies:
    - build-windows-amd64