variables:
  GITHUB_USER: rainu
  GITHUB_REPO: backup2glacier
  RELEASE_TAG: v0.1.0

stages:
- build
- predeploy
- deploy

build-linux-386:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=linux
  - GOARCH=386
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  - chmod +x backup2glacier-${GOOS}-${GOARCH}
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-linux-amd64:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=linux
  - GOARCH=amd64
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  - chmod +x backup2glacier-${GOOS}-${GOARCH}
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-linux-arm:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=linux
  - GOARCH=arm
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  - chmod +x backup2glacier-${GOOS}-${GOARCH}
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-linux-arm64:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=linux
  - GOARCH=arm64
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  - chmod +x backup2glacier-${GOOS}-${GOARCH}
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-windows-386:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=windows
  - GOARCH=386
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  - chmod +x backup2glacier-${GOOS}-${GOARCH}
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

build-windows-amd64:
  image: golang:1.10
  stage: build
  script:
  - export GOPATH=$(pwd)/build
  - mkdir -p build/src/
  - cd build/src/
  - ln -s ${CI_PROJECT_DIR} ./backup2glacier
  - cd backup2glacier
  - CGO_ENABLED=0
  - GOOS=windows
  - GOARCH=amd64
  - go get ./...
  - go build -a -installsuffix cgo -o backup2glacier-${GOOS}-${GOARCH} .
  - chmod +x backup2glacier-${GOOS}-${GOARCH}
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backup2glacier-*
    expire_in: 30min

prepare-deploy-github:
  image: golang:1.10
  stage: predeploy
  script:
  - go get github.com/aktau/github-release
  - github-release -v release --tag ${RELEASE_TAG} --description "automatic built builds"
  only:
  - master

deploy-github-linux-386:
  image: golang:1.10
  stage: deploy
  script:
  - go get github.com/aktau/github-release
  - github-release -v upload --tag ${RELEASE_TAG} -n backup2glacier-linux-386 -f ${CI_PROJECT_DIR}/backup2glacier-linux-386
  dependencies:
  - build-linux-386
  - prepare-deploy-github
  only:
  - master

deploy-github-linux-amd64:
  image: golang:1.10
  stage: deploy
  script:
  - go get github.com/aktau/github-release
  - github-release -v upload --tag ${RELEASE_TAG} -n backup2glacier-linux-amd64 -f ${CI_PROJECT_DIR}/backup2glacier-linux-amd64
  dependencies:
  - build-linux-amd64
  - prepare-deploy-github
  only:
  - master

deploy-github-linux-arm:
  image: golang:1.10
  stage: deploy
  script:
  - go get github.com/aktau/github-release
  - github-release -v upload --tag ${RELEASE_TAG} -n backup2glacier-linux-arm -f ${CI_PROJECT_DIR}/backup2glacier-linux-arm
  dependencies:
  - build-linux-arm
  - prepare-deploy-github
  only:
  - master

deploy-github-linux-arm64:
  image: golang:1.10
  stage: deploy
  script:
  - go get github.com/aktau/github-release
  - github-release -v upload --tag ${RELEASE_TAG} -n backup2glacier-linux-arm64 -f ${CI_PROJECT_DIR}/backup2glacier-linux-arm64
  dependencies:
  - build-linux-arm64
  - prepare-deploy-github
  only:
  - master

deploy-github-windows-386:
  image: golang:1.10
  stage: deploy
  script:
  - go get github.com/aktau/github-release
  - github-release -v upload --tag ${RELEASE_TAG} -n backup2glacier-windows-386 -f ${CI_PROJECT_DIR}/backup2glacier-windows-386
  dependencies:
  - build-windows-386
  - prepare-deploy-github
  only:
  - master

deploy-github-windows-amd64:
  image: golang:1.10
  stage: deploy
  script:
  - go get github.com/aktau/github-release
  - github-release -v upload --tag ${RELEASE_TAG} -n backup2glacier-windows-amd64 -f ${CI_PROJECT_DIR}/backup2glacier-windows-amd64
  dependencies:
  - build-windows-amd64
  - prepare-deploy-github
  only:
  - master
